[33mcommit 72f2bc4dcaaf146782a77f58fb178f822cfa381d[m
Author: Lukas Pesan <lpesan@c3r2s1.42prague.com>
Date:   Tue Mar 5 19:34:10 2024 +0100

    first commit

[1mdiff --git a/get_next_line b/get_next_line[m
[1mnew file mode 100755[m
[1mindex 0000000..b04c38a[m
Binary files /dev/null and b/get_next_line differ
[1mdiff --git a/get_next_line copy b/get_next_line copy[m
[1mnew file mode 100755[m
[1mindex 0000000..90a52d1[m
Binary files /dev/null and b/get_next_line copy differ
[1mdiff --git a/get_next_line copy.c b/get_next_line copy.c[m
[1mnew file mode 100644[m
[1mindex 0000000..ddd5166[m
[1m--- /dev/null[m
[1m+++ b/get_next_line copy.c[m	
[36m@@ -0,0 +1,198 @@[m
[32m+[m
[32m+[m[32m#define BUFFER_SIZE 10[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <unistd.h>[m
[32m+[m[32m#include <fcntl.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m//#include "get_next_line.h"[m
[32m+[m
[32m+[m[32msize_t	ft_strlen(const char *s)[m
[32m+[m[32m{[m
[32m+[m	[32msize_t	i;[m
[32m+[m
[32m+[m	[32mi = 0;[m
[32m+[m	[32mwhile (s[i])[m
[32m+[m		[32mi++;[m
[32m+[m	[32mreturn (i);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar	*ft_strjoin(char const *s1, char const *s2)[m
[32m+[m[32m{[m
[32m+[m	[32mint		i;[m
[32m+[m	[32mint		j;[m
[32m+[m	[32mint		slen;[m
[32m+[m	[32mchar	*res;[m
[32m+[m
[32m+[m	[32mi = 0;[m
[32m+[m	[32mj = 0;[m
[32m+[m	[32mslen = ft_strlen(s1) + ft_strlen(s2);[m
[32m+[m	[32mif (!s1 || !s2)[m
[32m+[m		[32mreturn (NULL);[m
[32m+[m	[32mres = malloc((slen + 1) * sizeof(char));[m
[32m+[m	[32mwhile (s1[i])[m
[32m+[m	[32m{[m
[32m+[m		[32mres[i] = s1[i];[m
[32m+[m		[32mi++;[m
[32m+[m	[32m}[m
[32m+[m	[32mwhile (s2[j])[m
[32m+[m	[32m{[m
[32m+[m		[32mres[i] = s2[j];[m
[32m+[m		[32mi++;[m
[32m+[m		[32mj++;[m
[32m+[m	[32m}[m
[32m+[m	[32mres[i] = 0;[m
[32m+[m	[32mreturn (res);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar	*ft_strdup(const char *s)[m
[32m+[m[32m{[m
[32m+[m	[32mchar	*ptr;[m
[32m+[m	[32mint		i;[m
[32m+[m
[32m+[m	[32mi = 0;[m
[32m+[m	[32mptr = malloc((ft_strlen(s) + 1) * sizeof(char));[m
[32m+[m	[32mif (ptr == NULL)[m
[32m+[m		[32mreturn (NULL);[m
[32m+[m	[32mwhile (s[i])[m
[32m+[m	[32m{[m
[32m+[m		[32mptr[i] = s[i];[m
[32m+[m		[32mi++;[m
[32m+[m	[32m}[m
[32m+[m	[32mptr[i] = 0;[m
[32m+[m	[32mreturn (ptr);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid	*ft_calloc(size_t nitems, size_t size)[m
[32m+[m[32m{[m
[32m+[m	[32mvoid	*ptr;[m
[32m+[m	[32msize_t	i;[m
[32m+[m
[32m+[m	[32mi = 0;[m
[32m+[m	[32mif (nitems == 0 || size == 0)[m
[32m+[m		[32mreturn (malloc(0));[m
[32m+[m	[32mi = nitems * size;[m
[32m+[m	[32mif (i / nitems != size)[m
[32m+[m		[32mreturn (NULL);[m
[32m+[m	[32mi = 0;[m
[32m+[m	[32mptr = malloc(nitems * size);[m
[32m+[m	[32mif (ptr == NULL)[m
[32m+[m		[32mreturn (NULL);[m
[32m+[m	[32mwhile (i < (nitems * size))[m
[32m+[m	[32m{[m
[32m+[m		[32m((char *)ptr)[i] = 0;[m
[32m+[m		[32mi++;[m
[32m+[m	[32m}[m
[32m+[m	[32mreturn (ptr);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint	ft_check_buff(char* buffer)[m
[32m+[m[32m{[m[41m	[m
[32m+[m	[32mint	i;[m
[32m+[m
[32m+[m	[32mi = 0;[m
[32m+[m	[32mwhile(buffer[i])[m
[32m+[m	[32m{[m
[32m+[m		[32mif(buffer[i] == '\n')[m
[32m+[m			[32mreturn (i);[m
[32m+[m		[32mi++;[m
[32m+[m	[32m}[m
[32m+[m	[32mreturn (-1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar	*ft_fill_buffer(int	fd)[m
[32m+[m[32m{[m
[32m+[m	[32mchar	*buffer;[m
[32m+[m	[32mint	counter;[m
[32m+[m
[32m+[m	[32mbuffer = malloc(BUFFER_SIZE + 1);[m
[32m+[m	[32mcounter = 0;[m
[32m+[m	[32mwhile (counter <= BUFFER_SIZE)[m
[32m+[m	[32m{[m
[32m+[m		[32mread(fd, &buffer[counter], sizeof(char));[m
[32m+[m		[32mcounter++;[m
[32m+[m	[32m}[m
[32m+[m	[32mbuffer[counter] = 0;[m
[32m+[m	[32mcounter = 0;[m
[32m+[m